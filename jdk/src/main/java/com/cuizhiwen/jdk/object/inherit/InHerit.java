package com.cuizhiwen.jdk.object.inherit;

public class InHerit {
    /**
     * 继承：
     *      继承是java面向对象编程技术的一块基石，因为它允许创建分等级层次的类。
     *      继承就是子类继承父类的特征和行为，使得子类对象（实例）具有父类的实例域和方法，或子类从父类继承方法，使得子类具有父类相同的行为
     *
     * 方法重写: 两同，两小，一大原则
     *      1>方法名同，参数列表相同
     *      2>两小 子类返回值类型比父类返回值类型小或等于,子类方法抛出异常比父类更小或者等于
     *      3>一大 子类访问权限比父类更大或者等于
     * 继承的特性：
     *      子类拥有父类非 private 的属性、方法。
     *      子类可以拥有自己的属性和方法，即子类可以对父类进行扩展。
     *      子类可以用自己的方式实现父类的方法。
     *      4>Java 的继承是单继承，但是可以多重继承，多重继承就是，例如 A 类继承 B 类，B 类继承 C 类，所以按照关系就是 C 类是 B 类的父类，B 类是 A 类的父类，这是 Java 继承区别于 C++ 继承的一个特性。
     *      提高了类之间的耦合性（继承的缺点，耦合度高就会造成代码之间的联系越紧密，代码独立性越差）。
     * super 与 this 关键字:
     *      super关键字：我们可以通过super关键字来实现对父类成员的访问，用来引用当前对象的父类。
     *      this关键字：指向自己的引用
     * 构造器：
     *      1>子类是不继承父类的构造器（构造方法或者构造函数）的，它只是调用（隐式或显式）。
     *      如果父类的构造器带有参数，则必须在子类的构造器中显式地通过 super 关键字调用父类的构造器并配以适当的参数列表。
     *      2>如果父类构造器没有参数，则在子类的构造器中不需要使用 super 关键字调用父类构造器，系统会自动调用父类的无参构造器
     */
}
